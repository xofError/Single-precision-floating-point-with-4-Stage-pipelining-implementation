$date
	Mon Jun  9 14:58:39 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_PipelinedFAdd $end
$var wire 1 ! rst $end
$var wire 32 " result [31:0] $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 1 % clk $end
$var reg 1 & operation $end
$var reg 1 ' reset $end
$scope module dut $end
$var wire 32 ( A [31:0] $end
$var wire 1 ) A_big1 $end
$var wire 32 * B [31:0] $end
$var wire 1 % clk $end
$var wire 1 & operation $end
$var wire 1 ! rst $end
$var wire 1 + sign_A1 $end
$var wire 1 , sign_B1 $end
$var wire 1 - sum_sign3 $end
$var wire 25 . sum3 [24:0] $end
$var wire 1 / sB2 $end
$var wire 1 0 sA2 $end
$var wire 32 1 result [31:0] $end
$var wire 1 2 mB2 $end
$var wire 1 3 mA2 $end
$var wire 8 4 exp2 [7:0] $end
$var wire 1 5 eB2 $end
$var wire 1 6 eA2 $end
$var wire 1 7 diff2 $end
$var wire 8 8 diff1 [7:0] $end
$var wire 1 9 bypass_res $end
$var wire 1 : bypass_1_5 $end
$var wire 1 ; B_sign1_eff $end
$var wire 24 < B_man2 [23:0] $end
$var wire 24 = B_man1 [23:0] $end
$var wire 8 > B_exp1 [7:0] $end
$var wire 1 ? A_sign1 $end
$var wire 24 @ A_man2 [23:0] $end
$var wire 24 A A_man1 [23:0] $end
$var wire 8 B A_exp1 [7:0] $end
$var wire 1 C A_bigger1 $end
$var wire 1 D A_big2 $end
$scope module U1 $end
$var wire 32 E A [31:0] $end
$var wire 32 F B [31:0] $end
$var wire 1 % clk $end
$var wire 1 & operation $end
$var wire 1 ! rst $end
$var reg 1 C A_bigger $end
$var reg 8 G A_exp [7:0] $end
$var reg 24 H A_man [23:0] $end
$var reg 1 ? A_sign $end
$var reg 8 I B_exp [7:0] $end
$var reg 24 J B_man [23:0] $end
$var reg 1 K B_sign $end
$var reg 1 ; B_sign_eff $end
$var reg 8 L exp_diff [7:0] $end
$upscope $end
$scope module U1_5 $end
$var wire 1 M A_inf $end
$var wire 1 ) A_is_bigger $end
$var wire 1 N A_nan $end
$var wire 1 O A_zero $end
$var wire 1 P B_inf $end
$var wire 1 Q B_nan $end
$var wire 1 R B_zero $end
$var wire 1 % clk $end
$var wire 8 S exp_A [7:0] $end
$var wire 8 T exp_B [7:0] $end
$var wire 8 U exp_diff [7:0] $end
$var wire 24 V man_A [23:0] $end
$var wire 24 W man_B [23:0] $end
$var wire 1 & operation $end
$var wire 1 ! rst $end
$var wire 1 + sign_A $end
$var wire 1 , sign_B_eff $end
$var reg 1 D A_is_bigger_out $end
$var reg 1 : bypass $end
$var reg 32 X bypass_result [31:0] $end
$var reg 8 Y exp_A_out [7:0] $end
$var reg 8 Z exp_B_out [7:0] $end
$var reg 8 [ exp_diff_out [7:0] $end
$var reg 24 \ man_A_out [23:0] $end
$var reg 24 ] man_B_out [23:0] $end
$var reg 1 0 sign_A_out $end
$var reg 1 / sign_B_out $end
$upscope $end
$scope module U2 $end
$var wire 1 C A_bigger $end
$var wire 8 ^ A_exp [7:0] $end
$var wire 24 _ A_man [23:0] $end
$var wire 8 ` B_exp [7:0] $end
$var wire 24 a B_man [23:0] $end
$var wire 1 % clk $end
$var wire 8 b exp_diff [7:0] $end
$var wire 1 ! rst $end
$var reg 24 c A_man_aligned [23:0] $end
$var reg 24 d B_man_aligned [23:0] $end
$var reg 8 e exp_out [7:0] $end
$upscope $end
$scope module U3 $end
$var wire 24 f A_man_aligned [23:0] $end
$var wire 1 ? A_sign $end
$var wire 24 g B_man_aligned [23:0] $end
$var wire 1 ; B_sign_eff $end
$var wire 1 % clk $end
$var wire 1 ! rst $end
$var wire 1 h same_sign $end
$var reg 25 i sum_man [24:0] $end
$var reg 1 - sum_sign $end
$var reg 25 j temp_result [24:0] $end
$upscope $end
$scope module U4 $end
$var wire 1 % clk $end
$var wire 8 k exp_in [7:0] $end
$var wire 1 ! rst $end
$var wire 25 l sum_man [24:0] $end
$var wire 1 - sum_sign $end
$var reg 8 m exp_adj [7:0] $end
$var reg 24 n norm_man [23:0] $end
$var reg 32 o result [31:0] $end
$var reg 5 p shift [4:0] $end
$scope function leading_zeros $end
$var reg 24 q val [23:0] $end
$var integer 32 r i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
xh
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
b0z W
b0z V
bx U
b0z T
b0z S
xR
0Q
0P
xO
0N
0M
bx L
xK
bx J
bx I
bx H
bx G
bx F
bx E
xD
xC
bx B
bx A
bx @
x?
bx >
bx =
bx <
x;
x:
x9
bx 8
x7
x6
x5
bx 4
x3
x2
bx 1
x0
x/
bx .
x-
z,
z+
bx *
z)
bx (
1'
x&
0%
bx $
bx #
bx "
z!
$end
#5000
z2
z3
z5
z6
0C
zD
b0z ]
b0z \
b0z Z
b0z Y
z/
z0
0:
b0 p
b11111111111111111111111111111111 r
1%
#10000
0%
1&
b10000000000000000000000000000000 $
b10000000000000000000000000000000 *
b10000000000000000000000000000000 F
b0 #
b0 (
b0 E
0'
#15000
1C
b0 8
b0 L
b0 U
b0 b
b0 =
b0 J
b0 a
b0 A
b0 H
b0 _
b0 >
b0 I
b0 `
b0 B
b0 G
b0 ^
1K
0?
b11111111111111111111111111111111 r
1%
#20000
0%
#25000
1h
07
0;
b0 [
b0 4
b0 e
b0 k
b0 <
b0 d
b0 g
b0 @
b0 c
b0 f
b11111111111111111111111111111111 r
1%
#30000
0%
#35000
bx00000000xxxxxxxxxxxxxxxxxxxxxxx "
bx00000000xxxxxxxxxxxxxxxxxxxxxxx 1
bx00000000xxxxxxxxxxxxxxxxxxxxxxx o
0-
b0 j
b0 m
b11111111111111111111111111111111 r
1%
#40000
0%
#45000
b0 .
b0 i
b0 l
b0xxxxxxxxxxxxxxxxxxxxxxx "
b0xxxxxxxxxxxxxxxxxxxxxxx 1
b0xxxxxxxxxxxxxxxxxxxxxxx o
b11111111111111111111111111111111 r
1%
#50000
0%
#55000
b0 "
b0 1
b0 o
b0 n
b11111111111111111111111111111111 r
b0 q
1%
#60000
0%
